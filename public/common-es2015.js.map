{"version":3,"sources":["./src/app/services/ads.service.ts","./src/app/services/notification.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyC;;;AAOlC,MAAM,UAAU;IAGrB,YAA8B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF9C,SAAI,GAAG,UAAU,CAAC;IAGlB,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,CAAC,MAGN;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACvF,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,CAAC,EAAU,EAAE,GAAW;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACnE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAkB,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;IACjE,CAAC;;oEA3BU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAyC;;;AAOlC,MAAM,mBAAmB;IAG9B,YAA6B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7C,SAAI,GAAG,mBAAmB,CAAC;IAG3B,CAAC;IAED,MAAM,CAAC,YAA6B;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACpF,CAAC;IAED,OAAO,CAAC,MAEP;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuC,IAAI,CAAC,IAAI,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,CAAC,IAAqB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAoC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;IACnF,CAAC;;sFAtBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AdsDto, ShowAdsDto} from '../models/ads.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdsService {\n  base = '/api/ads';\n\n  constructor(private readonly  http: HttpClient) {\n  }\n\n  create(ads: AdsDto) {\n    return this.http.post<{ ads: AdsDto }>(this.base, ads);\n  }\n\n  getAll(params: {\n    skip?: string,\n    limit?: string\n  }) {\n    return this.http.get<{ ads: AdsDto[], count: number }>(`${this.base}/all`, {params});\n  }\n\n  showAds() {\n    return this.http.get<ShowAdsDto>(this.base);\n  }\n\n  update(id: string, ads: AdsDto) {\n    return this.http.put<{ ads: AdsDto }>(`${this.base}/${id}`, ads);\n  }\n\n  delete(id: string) {\n    return this.http.delete<{ ads: AdsDto }>(`${this.base}/${id}`);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {NotificationDto} from '../models/notification.dto';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  base = '/api/notification';\n\n  constructor(private readonly http: HttpClient) {\n  }\n\n  create(notification: NotificationDto) {\n    return this.http.post<{ notification: NotificationDto }>(this.base, notification);\n  }\n\n  findAll(params?: {\n    status?: string;\n  }) {\n    return this.http.get<{ notifications: NotificationDto[] }>(this.base, {params});\n  }\n\n  update(data: NotificationDto) {\n    return this.http.put<{ notification: NotificationDto }>(`${this.base}/${data._id}`, data);\n  }\n\n  delete(id: string) {\n    return this.http.delete<{ notification: NotificationDto }>(`${this.base}/${id}`);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}