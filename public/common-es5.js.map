{"version":3,"sources":["webpack:///src/app/services/ads.service.ts","webpack:///src/app/services/notification.service.ts"],"names":["AdsService","http","base","ads","post","params","get","id","put","providedIn","NotificationService","notification","data","_id"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaA,U;;;AAGX,0BAA8BC,IAA9B,EAAgD;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAF9B,aAAAC,IAAA,GAAO,UAAP;AAGC;;;;+BAEMC,G,EAAa;AAClB,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAgC,KAAKF,IAArC,EAA2CC,GAA3C,CAAP;AACD;;;+BAEME,M,EAGJ;AACD,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,WAAmD,KAAKJ,IAAxD,WAAoE;AAACG,kBAAM,EAANA;AAAD,WAApE,CAAP;AACD;;;kCAES;AACR,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,CAA0B,KAAKJ,IAA/B,CAAP;AACD;;;+BAEMK,E,EAAYJ,G,EAAa;AAC9B,iBAAO,KAAKF,IAAL,CAAUO,GAAV,WAAkC,KAAKN,IAAvC,cAA+CK,EAA/C,GAAqDJ,GAArD,CAAP;AACD;;;gCAEMI,E,EAAY;AACjB,iBAAO,KAAKN,IAAL,qBAAqC,KAAKC,IAA1C,cAAkDK,EAAlD,EAAP;AACD;;;;;;;uBA3BUP,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVS,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACPvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,mB;;;AAGX,mCAA6BT,IAA7B,EAA+C;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAF7B,aAAAC,IAAA,GAAO,mBAAP;AAGC;;;;+BAEMS,Y,EAA+B;AACpC,iBAAO,KAAKV,IAAL,CAAUG,IAAV,CAAkD,KAAKF,IAAvD,EAA6DS,YAA7D,CAAP;AACD;;;gCAEON,M,EAEL;AACD,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,CAAoD,KAAKJ,IAAzD,EAA+D;AAACG,kBAAM,EAANA;AAAD,WAA/D,CAAP;AACD;;;+BAEMO,I,EAAuB;AAC5B,iBAAO,KAAKX,IAAL,CAAUO,GAAV,WAAoD,KAAKN,IAAzD,cAAiEU,IAAI,CAACC,GAAtE,GAA6ED,IAA7E,CAAP;AACD;;;gCAEML,E,EAAY;AACjB,iBAAO,KAAKN,IAAL,qBAAuD,KAAKC,IAA5D,cAAoEK,EAApE,EAAP;AACD;;;;;;;uBAtBUG,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVD,oBAAU,EAAE;AADF,S;AAGoB,Q","file":"common-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AdsDto, ShowAdsDto} from '../models/ads.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdsService {\n  base = '/api/ads';\n\n  constructor(private readonly  http: HttpClient) {\n  }\n\n  create(ads: AdsDto) {\n    return this.http.post<{ ads: AdsDto }>(this.base, ads);\n  }\n\n  getAll(params: {\n    skip?: string,\n    limit?: string\n  }) {\n    return this.http.get<{ ads: AdsDto[], count: number }>(`${this.base}/all`, {params});\n  }\n\n  showAds() {\n    return this.http.get<ShowAdsDto>(this.base);\n  }\n\n  update(id: string, ads: AdsDto) {\n    return this.http.put<{ ads: AdsDto }>(`${this.base}/${id}`, ads);\n  }\n\n  delete(id: string) {\n    return this.http.delete<{ ads: AdsDto }>(`${this.base}/${id}`);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {NotificationDto} from '../models/notification.dto';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  base = '/api/notification';\n\n  constructor(private readonly http: HttpClient) {\n  }\n\n  create(notification: NotificationDto) {\n    return this.http.post<{ notification: NotificationDto }>(this.base, notification);\n  }\n\n  findAll(params?: {\n    status?: string;\n  }) {\n    return this.http.get<{ notifications: NotificationDto[] }>(this.base, {params});\n  }\n\n  update(data: NotificationDto) {\n    return this.http.put<{ notification: NotificationDto }>(`${this.base}/${data._id}`, data);\n  }\n\n  delete(id: string) {\n    return this.http.delete<{ notification: NotificationDto }>(`${this.base}/${id}`);\n  }\n\n}\n"]}