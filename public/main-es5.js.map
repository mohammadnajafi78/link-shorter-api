{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/link.service.ts","webpack:///src/app/services/setting.service.ts","webpack:///src/app/services/ticket.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/withdraws.service.ts","webpack:///src/app/utils/blockGaurd.ts","webpack:///src/app/utils/dashboardGuard.ts","webpack:///src/app/utils/gaurd.ts","webpack:///src/app/utils/http.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","loadChildren","m","ClientModule","AdminModule","DashboardModule","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","base","useClass","multi","declarations","providers","bootstrap","LinkService","http","params","get","newLink","mainLink","trim","post","put","shortLink","link","providedIn","SettingService","drawer$","setting","TicketService","ticket","UploadService","reject","fileInput","document","createElement","type","addEventListener","ev","files","undefined","click","error","file","formData","FormData","append","name","reportProgress","observe","UserService","user$","localStorage","getItem","profile","subscribe","res","next","user","phone","identifier","key","_id","WithdrawsService","amount","trackNumber","BlockGaurd","userService","router","pipe","toPromise","navigate","DashboardGuard","status","Guard","role","MyHttpInterceptor","BASE_URL","url","startsWith","token","request","clone","headers","handle","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AppComponent} from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/client/client.module').then((m) => m.ClientModule),\n      },\n      {\n        path: 'admin/dashboard',\n        loadChildren: () =>\n          import('./pages/admin/admin.module').then((m) => m.AdminModule),\n      },\n      {\n        path: 'member/dashboard',\n        loadChildren: () =>\n          import('./pages/dashboard/dashboard.module').then(\n            (m) => m.DashboardModule\n          ),\n      },\n      {path: '**', redirectTo: 'page/not-found'}\n    ],\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"url-client\";\n}\n","<router-outlet></router-outlet>\n","import { BlockGaurd } from \"./utils/blockGaurd\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { environment } from \"../environments/environment\";\nimport { MyHttpInterceptor } from \"./utils/http.interceptor\";\nimport { UserService } from \"./services/user.service\";\nimport { LinkService } from \"./services/link.service\";\nimport { WithdrawsService } from \"./services/withdraws.service\";\nimport { TicketService } from \"./services/ticket.service\";\nimport { Guard } from \"./utils/gaurd\";\nimport { DashboardGuard } from \"./utils/dashboardGuard\";\nimport { SettingService } from \"./services/setting.service\";\nimport { UploadService } from \"./services/upload.service\";\nimport { RECAPTCHA_V3_SITE_KEY, RecaptchaV3Module } from \"ng-recaptcha\";\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    // RecaptchaModule\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: environment.base },\n    { provide: HTTP_INTERCEPTORS, useClass: MyHttpInterceptor, multi: true },\n    Guard,\n    DashboardGuard,\n    BlockGaurd,\n    LinkService,\n    WithdrawsService,\n    TicketService,\n    UserService,\n    SettingService,\n    UploadService,\n  ],\n  // exports: [RecaptchaModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LinkDto } from \"../models/link.dto\";\nimport { VisitDto, VisitChart } from \"../models/visit.dto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LinkService {\n  constructor(private readonly http: HttpClient) {}\n\n  base = \"/api/links\";\n\n  // گرفتن لینک های کابر\n  getLinkList(params: {\n    search?: string;\n    skip?: string;\n    limit?: string;\n    status?: string;\n  }) {\n    return this.http.get<{ links: LinkDto[]; count: number }>(\n      `${this.base}/all`,\n      { params }\n    );\n  }\n\n  // گرفتن لینک های یک کاربر\n  getUserLinkList(params: {\n    search?: string;\n    skip?: string;\n    limit?: string;\n    status?: string;\n    showAds?: string;\n  }) {\n    return this.http.get<{ links: LinkDto[]; count: number }>(`${this.base}`, {\n      params,\n    });\n  }\n\n  // ایجاد لینک کوتاه جدید\n  createLink(newLink: LinkDto) {\n    newLink.mainLink.trim();\n    return this.http.post<{ link: LinkDto }>(this.base, newLink);\n  }\n\n  // ویرایش لینک\n  update(id: string, newLink: LinkDto) {\n    return this.http.put<{ status: boolean }>(`${this.base}/${id}`, newLink);\n  }\n\n  // گرفتن لینک با آیدی\n  getVisit(id: string) {\n    return this.http.get<{ visits: VisitDto[]; visitChart: any[] }>(\n      `${this.base}/visits/${id}`\n    );\n  }\n\n  getUserVisit() {\n    return this.http.get<{ visitChart: any }>(`${this.base}/visit/all`);\n  }\n\n  // گرفتن لینک با لینک کوتاه\n  getLinkByShortLink(shortLink: string) {\n    return this.http.get<{ link: LinkDto }>(`${this.base}/${shortLink}`);\n  }\n\n  // ایجاد یک بازدید جدید\n  createVisit(id: string) {\n    return this.http.post<{ status: boolean }>(`${this.base}/visit`, {\n      link: id,\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {SettingDto, WithdrawsMethod} from 'src/app/models/setting.model';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class SettingService {\n  drawer$: BehaviorSubject<boolean>;\n  base = '/api/setting';\n\n  constructor(private readonly http: HttpClient) {\n    this.drawer$ = new BehaviorSubject<boolean>(false);\n  }\n\n  get() {\n    return this.http.get<{ setting: SettingDto[] }>(this.base);\n  }\n\n  update(id: string, setting: SettingDto) {\n    return this.http.put<{ status: boolean }>(`${this.base}/${id}`, setting);\n  }\n\n  findMethod() {\n    return this.http.get<{ withdrawsMethod: WithdrawsMethod }>(\n      `${this.base}/method`\n    );\n  }\n}\n","import { Messages } from \"src/app/models/ticket.dto\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TicketDto } from \"../models/ticket.dto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TicketService {\n  base = \"/api/tickets\";\n\n  constructor(private readonly http: HttpClient) {}\n\n  // گرفتن لیست تیکت ها\n  getTicketList(params: {\n    search?: string;\n    skip?: string;\n    limit?: string;\n    read: string;\n  }) {\n    return this.http.get<{ tickets: TicketDto[]; count: number }>(\n      `${this.base}/all`,\n      {\n        params,\n      }\n    );\n  }\n\n  // خواندن تیکت\n  readTicket(id: string) {\n    return this.http.put<{ ticket: TicketDto }>(`${this.base}/${id}`, {});\n  }\n\n  // ایجاد لینک کوتاه جدید\n  create(ticket: TicketDto) {\n    return this.http.post<{ ticket: TicketDto }>(this.base, ticket);\n  }\n\n  // گرفتن لینک با آیدی\n  getTicketById(id: string) {\n    return this.http.get<{ ticket: TicketDto }>(`${this.base}/${id}`);\n  }\n\n  // ارسال جواب با تیکت پشتیبانی\n  sendResponse(ticket: TicketDto) {\n    return this.http.post<{ status: boolean }>(`${this.base}/response`, ticket);\n  }\n\n  // لیست تیکت های یک کاربر\n  getUserTicket(params: { skip?: string; limit?: string }) {\n    return this.http.get<{ tickets: TicketDto[]; count: number }>(this.base, {\n      params,\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  base = '/api/upload';\n\n  constructor(private readonly http: HttpClient) {\n  }\n\n  // برای ایجاد ورودی فایل\n  openFileChooser(): Promise<FileList> {\n    return new Promise<FileList>((resolve, reject) => {\n      try {\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.addEventListener('change', ev => {\n          const files: FileList = fileInput.files;\n\n          if (files) {\n            resolve(files);\n          } else {\n            reject(undefined);\n          }\n        });\n        fileInput.click();\n      } catch (error) {\n        reject();\n      }\n    });\n  }\n\n  // برای آپلود عکس در سرور\n  upload(file: File) {\n    const formData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post(`${this.base}/image`, formData, {\n      // responseType: '',\n      // درصد پیشرفت آپلود\n      reportProgress: true,\n      observe: 'events',\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { UserDto } from \"../models/user.dto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  user$: BehaviorSubject<UserDto>;\n\n  constructor(private readonly http: HttpClient) {\n    this.user$ = new BehaviorSubject(null);\n    if (!!localStorage.getItem(\"token\")) {\n      this.profile().subscribe((res) => {\n        this.user$.next(res.user);\n      });\n    }\n  }\n\n  base = \"/api/users\";\n\n  signin(phone: string, identifier?: string) {\n    return this.http.post<{ status: boolean }>(`${this.base}/signin`, {\n      phone,\n      identifier,\n    });\n  }\n\n  verify(phone: string, key: string) {\n    return this.http.post<{ message: string; token: string }>(\n      `${this.base}/verify`,\n      { phone, key }\n    );\n  }\n\n  findSubset() {\n    return this.http.get<{ users: UserDto[] }>(`${this.base}/subset`);\n  }\n\n  profile() {\n    return this.http.get<{ user: UserDto }>(`${this.base}/profile`);\n  }\n\n  getUserList(params: { skip?: string; limit?: string; search?: string }) {\n    return this.http.get<{ users: UserDto[]; count: number }>(this.base, {\n      params,\n    });\n  }\n\n  adminUpdate(user: UserDto) {\n    return this.http.put(`${this.base}/${user._id}`, user);\n  }\n\n  updateUser(user: UserDto) {\n    return this.http.put<{ status: boolean }>(`${this.base}/profile`, user);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { async } from \"@angular/core/testing\";\nimport { WithdrawsDto } from \"../models/withdraws.dto\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WithdrawsService {\n  base = \"/api/withdraws\";\n\n  constructor(private readonly http: HttpClient) {}\n\n  // گرفتن لیست همه برداشت ها\n  getWithdrawsList(params: {\n    skip?: string;\n    limit?: string;\n    search?: string;\n    status: string;\n  }) {\n    return this.http.get<{ withdraws: WithdrawsDto[]; count: number }>(\n      `${this.base}/all`,\n      { params }\n    );\n  }\n\n  // ایجاد یک برداشت\n  create(amount: number) {\n    return this.http.post<{ withdraws: WithdrawsDto }>(this.base, { amount });\n  }\n\n  // گرفتن اطلاعات یک برداشت\n  getWothdrawsById(id: string) {\n    return this.http.get<{ withdraws: WithdrawsDto }>(`${this.base}/${id}`);\n  }\n\n  // کنسل کردن برداشت\n  setCancelWithdraws(id: string) {\n    return this.http.put<{ withdraws: WithdrawsDto }>(\n      `${this.base}/cancel/${id}`,\n      {}\n    );\n  }\n\n  // موفقیت آمیز بودن یک برداشت\n  setSuccessWithdraws(id: string, trackNumber: number) {\n    return this.http.put<{ withdraws: WithdrawsDto }>(\n      `${this.base}/success/${id}`,\n      { trackNumber }\n    );\n  }\n\n  // گرفتن برداشت های یک کاربر\n  getUserWithdrawsList(params: { skip?: string; limit?: string }) {\n    return this.http.get<{ withdraws: WithdrawsDto[]; count: number }>(\n      this.base,\n      { params }\n    );\n  }\n}\n","import { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"../services/user.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class BlockGaurd implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  async canActivate(): Promise<boolean> {\r\n    try {\r\n      if (!localStorage.getItem(\"token\")) {\r\n        throw false;\r\n      }\r\n      const user = await this.userService\r\n        .profile()\r\n        .pipe(\r\n          map((res) => {\r\n            return res.user;\r\n          })\r\n        )\r\n        .toPromise();\r\n      return true;\r\n    } catch (error) {\r\n      this.router.navigate([\"/page/not-found\"]);\r\n      throw false;\r\n    }\r\n  }\r\n}\r\n","import { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"../services/user.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class DashboardGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  async canActivate(): Promise<boolean> {\r\n    try {\r\n      if (!localStorage.getItem(\"token\")) {\r\n        throw false;\r\n      }\r\n      const user = await this.userService\r\n        .profile()\r\n        .pipe(\r\n          map((res) => {\r\n            return res.user;\r\n          })\r\n        )\r\n        .toPromise();\r\n      if (user.status !== \"block\") {\r\n        return true;\r\n      } else {\r\n        this.router.navigate([\"/member/dashboard/support\"]);\r\n      }\r\n    } catch (error) {\r\n      this.router.navigate([\"/page/not-found\"]);\r\n      throw false;\r\n    }\r\n  }\r\n}\r\n","import { CanActivate, Router } from \"@angular/router\";\r\nimport { UserService } from \"../services/user.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class Guard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  async canActivate(): Promise<boolean> {\r\n    try {\r\n      if (!localStorage.getItem(\"token\")) {\r\n        throw false;\r\n      }\r\n      const user = await this.userService\r\n        .profile()\r\n        .pipe(\r\n          map((res) => {\r\n            return res.user;\r\n          })\r\n        )\r\n        .toPromise();\r\n\r\n      if (user.role === \"admin\" && user.status !== \"block\") {\r\n        return true;\r\n      } else {\r\n        throw false;\r\n      }\r\n    } catch (error) {\r\n      this.router.navigate([\"/page/not-found\"]);\r\n      throw false;\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MyHttpInterceptor implements HttpInterceptor {\r\n  public BASE_URL: string = environment.url;\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (!req.url.startsWith('http')) {\r\n      const token = localStorage.getItem('token');\r\n      let request = req.clone({url: this.BASE_URL + req.url});\r\n\r\n      if (token) {\r\n        request = request.clone({\r\n          headers: req.headers.append('authorization', `Bearer ${token}`),\r\n        });\r\n      }\r\n      return next.handle(request);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base: \"/\",\n  url: \"https://1xad.net\",\n  // url: \"http://localhost:3000\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}