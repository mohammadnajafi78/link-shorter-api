{"version":3,"sources":["webpack:///src/app/components/client-header/client-header.component.ts","webpack:///src/app/components/client-header/client-header.component.html","webpack:///src/app/pages/client/client.module.ts","webpack:///src/app/pages/client/home/home.component.html","webpack:///src/app/pages/client/home/home.component.ts","webpack:///src/app/pages/client/login/login.component.ts","webpack:///src/app/pages/client/login/login.component.html","webpack:///src/app/pages/client/not-found/not-found.component.ts","webpack:///src/app/pages/client/not-found/not-found.component.html","webpack:///src/app/pages/client/short-link/short-link.component.html","webpack:///src/app/pages/client/short-link/short-link.component.ts","webpack:///src/app/pages/client/ticket/ticket.component.html","webpack:///src/app/pages/client/ticket/ticket.component.ts","webpack:///src/app/templates/client-template/client-template.component.ts","webpack:///src/app/templates/client-template/client-template.component.html"],"names":["settingService","ClientHeaderComponent","userService","breakpointObserver","router","isSmallScreen","user$","subscribe","user","isMatched","commands","navigate","selector","templateUrl","styleUrls","routes","path","component","children","ClientModule","forChild","declarations","imports","HomeComponent","linkService","snackbar","url","linkControl","required","pattern","link","newLink","open","verticalPosition","horizontalPosition","duration","direction","hasError","_id","showAds","createLink","pipe","res","toPromise","console","log","LoginComponent","phoneControl","keyControl","phone","key","state","loading","invalid","startsWith","substr","signin","status","err","verify","localStorage","setItem","token","message","profile","next","NotFoundComponent","ShortLinkComponent","route","videoFormat","fileFormat","showLink","format","paramMap","params","shortLink","get","getLinkByShortLink","type","some","el","mainLink","includes","window","location","href","findLinkFormat","captchaResponse","id","createVisit","TicketComponent","ticketService","ticket","recaptchaResponse","ticketForm","group","name","family","subject","email","content","valid","create","controls","resolved","createTicket","ClientTemplateComponent","drawer$","openLink"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AAGE;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,cAAA,cAA4B,IAA5B,CAAT;AAA0C,SAA1C;;AAEA;;AACE;;AACF;;AACF;;;;;;;;AAIA;;AAGE;;AAAmB;AAAA;;AAAA;;AAAA,mCAAmB,GAAnB;AAAsB,SAAtB;;AACjB;;AACF;;AAEA;;AACE;;AACF;;AACF;;;;;;;;AAEE;;AAGE;AAAA;;AAAA;;AAAA,mCAAmB,mBAAnB;AAAsC,SAAtC;;AAEA;;AACF;;;;;;;;AAEA;;AAAsC;AAAA;;AAAA;;AAAA,mCAAmB,aAAnB;AAAgC,SAAhC;;AACpC;;AACF;;;;;;AAXF;;AACE;;AAQA;;AAGF;;;;;;AAVI;;AAAA;;AAOM;;AAAA;;;;QDrBCC,qB;;;AAIX,qCACSC,WADT,EAEUC,kBAFV,EAGSH,cAHT,EAIUI,MAJV,EAIwB;AAAA;;AAHf,aAAAF,WAAA,GAAAA,WAAA;AACC,aAAAC,kBAAA,GAAAA,kBAAA;AACD,aAAAH,cAAA,GAAAA,cAAA;AACC,aAAAI,MAAA,GAAAA,MAAA;AAPV,aAAAC,aAAA,GAAgB,KAAhB;AASC;;;;mCAEU;AAAA;;AACT,eAAKH,WAAL,CAAiBI,KAAjB,CAAuBC,SAAvB,CAAiC,UAACC,IAAD,EAAU;AACzC,iBAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,WAFD;AAGA,eAAKH,aAAL,GAAqB,KAAKF,kBAAL,CAAwBM,SAAxB,CACnB,oBADmB,CAArB;AAGD;;;iCAEQC,Q,EAAiB;AACxB,eAAKN,MAAL,CAAYO,QAAZ,CAAqBD,QAArB,EADwB,CAExB;AACD;;;;;;;uBAxBUT,qB,EAAqB,mI,EAAA,uI,EAAA,yI,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,0c;AAAA;AAAA;ACZlC;;AACE;;AASA;;AACE;;AACF;;AACA;;AAWA;;AAaF;;AACA;;;;AApCI;;AAAA;;AAQsB;;AAAA;;AAGA;;AAAA;;AAWE;;AAAA;;;;;;;;;sEDZfA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTW,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,mHAFb;AAGEC,cAAQ,EAAE,CACR;AAACF,YAAI,EAAE,EAAP;AAAWC,iBAAS,EAAE;AAAtB,OADQ,EAER;AAACD,YAAI,EAAE,aAAP;AAAsBC,iBAAS,EAAE;AAAjC,OAFQ,EAGR;AAACD,YAAI,EAAE,YAAP;AAAqBC,iBAAS,EAAE;AAAhC,OAHQ;AAHZ,KADqB,EAUrB;AAACD,UAAI,EAAE,YAAP;AAAqBC,eAAS,EAAE;AAAhC,KAVqB,EAWrB;AAACD,UAAI,EAAE,gBAAP;AAAyBC,eAAS,EAAE;AAApC,KAXqB,CAAvB;;QA0BaE,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBAFd,CAAC,4DAAD,EAAe,6DAAaC,QAAb,CAAsBL,MAAtB,CAAf,EAA8C,yDAA9C,CAEc;;;;0HAAZI,Y,EAAY;AAAA,uBAVrB,mHAUqB,EATrB,qEASqB,EARrB,kEAQqB,EAPrB,wEAOqB,EANrB,mFAMqB,EALrB,gFAKqB,EAJrB,wGAIqB;AAJA,kBAEb,4DAFa,EAEC,4DAFD,EAEgC,yDAFhC;AAIA,O;AAF2C,K;;;;;sEAEvDA,Y,EAAY;cAZxB,sDAYwB;eAZf;AACRE,sBAAY,EAAE,CACZ,mHADY,EAEZ,qEAFY,EAGZ,kEAHY,EAIZ,wEAJY,EAKZ,mFALY,EAMZ,gFANY,EAOZ,wGAPY,CADN;AAURC,iBAAO,EAAE,CAAC,4DAAD,EAAe,6DAAaF,QAAb,CAAsBL,MAAtB,CAAf,EAA8C,yDAA9C;AAVD,S;AAYe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXnB;;AACE;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AATM;;AAAA;;AAMA;;AAAA;;;;QCpBCQ,a;;;AAaX,6BACUpB,kBADV,EAEmBqB,WAFnB,EAGmBtB,WAHnB,EAImBuB,QAJnB,EAIwC;AAAA;;AAAA;;AAH9B,aAAAtB,kBAAA,GAAAA,kBAAA;AACS,aAAAqB,WAAA,GAAAA,WAAA;AACA,aAAAtB,WAAA,GAAAA,WAAA;AACA,aAAAuB,QAAA,GAAAA,QAAA;AAZnB,aAAAC,GAAA,GAAc,sEAAYA,GAA1B;AACA,aAAAC,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAWC,QADqB,EAEhC,0DAAWC,OAAX,CACE,gGADF,CAFgC,CAApB,CAAd;AAaE,aAAK3B,WAAL,CAAiBI,KAAjB,CAAuBC,SAAvB,CAAiC,UAACC,IAAD,EAAU;AACzC,gBAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,SAFD;AAGA,aAAKH,aAAL,GAAqB,KAArB;AACA,aAAKyB,IAAL,GAAY,EAAZ;AACA,aAAKC,OAAL,GAAe,EAAf;AACD;;;;wCAEe;AACd,eAAKN,QAAL,CAAcO,IAAd,CAAmB,aAAnB,EAAkC,IAAlC,EAAwC;AACtCC,4BAAgB,EAAE,KADoB;AAEtCC,8BAAkB,EAAE,QAFkB;AAGtCC,oBAAQ,EAAE,IAH4B;AAItCC,qBAAS,EAAE;AAJ2B,WAAxC;AAMD,S,CAED;;;;qCACmB;;;;;;;;;;;;yBAGX,KAAKT,WAAL,CAAiBU,QAAjB,CAA0B,UAA1B,C;;;;;AACF,yBAAKZ,QAAL,CAAcO,IAAd,CAAmB,iBAAnB,EAAsC,IAAtC,EAA4C;AAC1CC,sCAAgB,EAAE,QADwB;AAE1CC,wCAAkB,EAAE,QAFsB;AAG1CC,8BAAQ,EAAE,IAHgC;AAI1CC,+BAAS,EAAE;AAJ+B,qBAA5C;;;;;yBAMS,KAAKT,WAAL,CAAiBU,QAAjB,CAA0B,SAA1B,C;;;;;AACT;AACA,wBAAI,KAAKV,WAAL,CAAiBU,QAAjB,CAA0B,SAA1B,CAAJ,EAA0C;AACxC,2BAAKZ,QAAL,CAAcO,IAAd,CAAmB,sBAAnB,EAA2C,IAA3C,EAAiD;AAC/CC,wCAAgB,EAAE,QAD6B;AAE/CC,0CAAkB,EAAE,QAF2B;AAG/CC,gCAAQ,EAAE,IAHqC;AAI/CC,iCAAS,EAAE;AAJoC,uBAAjD;AAMD;;;;;;AAED,wBAAI,KAAK5B,IAAL,KAAc,IAAlB,EAAwB;AACtB,2BAAKsB,IAAL,CAAUtB,IAAV,GAAiB,KAAKA,IAAL,CAAU8B,GAA3B;AACA,2BAAKR,IAAL,CAAUS,OAAV,GAAoB,IAApB;AACD;;;AACD,2BAAM,KAAKf,WAAL,CACHgB,UADG,CACQ,KAAKV,IADb,EAEHW,IAFG,CAGF,2DAAI,UAACC,GAAD,EAAS;AACX,4BAAI,CAACX,OAAL,GAAeW,GAAG,CAACZ,IAAnB;AACA,4BAAI,CAACA,IAAL,GAAY,EAAZ;AACD,qBAHD,CAHE,EAQHa,SARG,EAAN;;;;;;;;;AAWFC,2BAAO,CAACC,GAAR;;;;;;;;;AAEH;;;mCAEO;AACN,eAAKxC,aAAL,GAAqB,KAAKF,kBAAL,CAAwBM,SAAxB,CACnB,oBADmB,CAArB;AAGD;;;;;;;uBAjFUc,a,EAAa,uI,EAAA,0I,EAAA,0I,EAAA,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,q+B;AAAA;AAAA;ADhB1B;;AACA;;AACE;;AACE;;AACE;;AACE;;AACA;;AACA;;AACE;;AACF;;AACA;;AACA;;AACF;;AACA;;AACE;;AACE;;AACE;AAAA;AAAA,aAA2B,eAA3B,EAA2B;AAAA,mBAEV,IAAAiB,UAAA,EAFU;AAEE,WAF7B;;AADF;;AAOA;;AAAQ;AAAA,mBAAS,IAAAA,UAAA,EAAT;AAAqB,WAArB;;AACN;;AAA0B;;AAAI;;AAChC;;AACF;;AACF;;AACA;;AAaF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAIF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAIF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAIF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA3EY;;AAAA,iGAA2B,aAA3B,EAA2B,eAA3B;;AAWD;;AAAA;;;;;;;;;sECXEjB,a,EAAa;cALzB,uDAKyB;eALf;AACTX,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BU;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;AA7BN;;AAIE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AADF;;AAMA;;AACE;;AACF;;AACA;;AAGA;;AAGF;;AACF;;AAEA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;;;;;AAtBQ;;AAAA,0FAAmB,aAAnB,EAAmB,mBAAnB;;AAQS;;AAAA;;AAGA;;AAAA;;;;;;AAoCX;;AACE;;AACF;;;;;;AAEA;;AACE;;AACF;;;;;;;;AA5BN;;AAIE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AADF;;AAOA;;AAIA;;AAGA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;;;;;AAxBQ;;AAAA,wFAAiB,aAAjB,EAAiB,iBAAjB;;AAMS;;AAAA;;AAIA;;AAAA;;;;QD9DRgC,c;;;AAgBX,8BACmB5C,WADnB,EAEmBuB,QAFnB,EAGmBrB,MAHnB,EAGiC;AAAA;;AAAA;;AAFd,aAAAF,WAAA,GAAAA,WAAA;AACA,aAAAuB,QAAA,GAAAA,QAAA;AACA,aAAArB,MAAA,GAAAA,MAAA;AAbnB,aAAA2C,YAAA,GAAe,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACjC,0DAAWnB,QADsB,EAEjC,0DAAWC,OAAX,CAAmB,iBAAnB,CAFiC,CAApB,CAAf;AAKA,aAAAmB,UAAA,GAAa,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC/B,0DAAWpB,QADoB,EAE/B,0DAAWC,OAAX,CAAmB,UAAnB,CAF+B,CAApB,CAAb;AAUE3B,mBAAW,CAACI,KAAZ,CAAkBC,SAAlB,CAA4B,UAACmC,GAAD,EAAS;AACnC,cAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,kBAAI,CAACtC,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF,SAJD;AAKA,aAAKsC,KAAL,GAAa,EAAb;AACA,aAAKC,GAAL,GAAW,EAAX;AACA,aAAKC,KAAL,GAAa,OAAb;AACA,aAAKC,OAAL,GAAe,KAAf;AACD;;;;mCAEO,CAAW,C,CAEnB;;;;iCACS;AAAA;;AACP,cAAI,KAAKL,YAAL,CAAkBM,OAAtB,EAA+B;AAC7B,mBAAO,KAAP;AACD;;AACD,cAAI,KAAKJ,KAAL,CAAWK,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B,iBAAKL,KAAL,GAAa,KAAKA,KAAL,CAAWM,MAAX,CAAkB,CAAlB,CAAb;AACD;;AACD,eAAKrD,WAAL,CAAiBsD,MAAjB,CAAwB,KAAKP,KAA7B,EAAoC1C,SAApC,CACE,UAACmC,GAAD,EAAS;AACP,gBAAIA,GAAG,CAACe,MAAR,EAAgB;AACd,oBAAI,CAACN,KAAL,GAAa,KAAb;AACD;AACF,WALH,EAME,UAACO,GAAD,EAAS;AACPd,mBAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,WARH;AAUD,S,CAED;;;;iCACS;AAAA;;AACP,cAAI,KAAKV,UAAL,CAAgBK,OAApB,EAA6B;AAC3B,mBAAO,KAAP;AACD;;AACD,eAAKnD,WAAL,CAAiByD,MAAjB,CAAwB,KAAKV,KAA7B,EAAoC,KAAKC,GAAzC,EAA8C3C,SAA9C,CACE,UAACmC,GAAD,EAAS;AACPkB,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BnB,GAAG,CAACoB,KAAlC;;AAEA,kBAAI,CAACrC,QAAL,CAAcO,IAAd,CAAmBU,GAAG,CAACqB,OAAvB,EAAgC,IAAhC,EAAsC;AACpC9B,8BAAgB,EAAE,QADkB;AAEpCC,gCAAkB,EAAE,QAFgB;AAGpCC,sBAAQ,EAAE,IAH0B;AAIpCC,uBAAS,EAAE;AAJyB,aAAtC;;AAMA,kBAAI,CAAC4B,OAAL;;AACA,kBAAI,CAAC5D,MAAL,CAAYO,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD,WAZH,EAaE,UAAC+C,GAAD,EAAS;AACPd,mBAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,WAfH;AAiBD,S,CAED;;;;kCACU;AAAA;;AACR,eAAKxD,WAAL,CAAiB8D,OAAjB,GAA2BzD,SAA3B,CACE,UAACmC,GAAD,EAAS;AACP,kBAAI,CAACxC,WAAL,CAAiBI,KAAjB,CAAuB2D,IAAvB,CAA4BvB,GAAG,CAAClC,IAAhC;AACD,WAHH,EAIE,UAACkD,GAAD,EAAS;AACPd,mBAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,WANH;AAQD;;;;;;;uBAxFUZ,c,EAAc,mI,EAAA,wI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,koB;AAAA;AAAA;ACX3B;;AAIE;;AAEE;;AAyCA;;AAyCF;;AACF;;;;AAlFM;;AAAA;;AAyCA;;AAAA;;;;;;;;;sEDrCOA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTlC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoD,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAa;;;;;;;;sEDOHA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTtD,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE6BxB;;AACE;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AACrD;;;;;;;;AAME;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;;;;;AAPa;;AAAA;;;;;;;;AAQb;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;;;;;;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;;;;;AA7BF;;AAKE;;AAUA;;AAKA;;AAUF;;;;;;AA3BE;;AAEmB;;AAAA;;AAUd;;AAAA;;AAKA;;AAAA;;;;;;AA3Db;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACF;;AACA;;AAGA;;AA+BA;;AACE;;AACF;;AACF;;AACF;;AACF;;;;;;AAvCW;;AAAA;;AAKH;;AAAA;;;;QC9BKqD,kB;;;AA2BX,kCACmB3C,WADnB,EAEmB4C,KAFnB,EAGmBhE,MAHnB,EAGiC;AAAA;;AAAA;;AAFd,aAAAoB,WAAA,GAAAA,WAAA;AACA,aAAA4C,KAAA,GAAAA,KAAA;AACA,aAAAhE,MAAA,GAAAA,MAAA;AA7BnB,aAAA0B,IAAA,GAAgB,EAAhB;AAKA,aAAAuC,WAAA,GAAc,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,MAAlC,EAA0C,MAA1C,EAAkD,MAAlD,CAAd;AACA,aAAAC,UAAA,GAAa,CACX,MADW,EAEX,MAFW,EAGX,MAHW,EAIX,OAJW,EAKX,MALW,EAMX,OANW,EAOX,MAPW,EAQX,MARW,EASX,MATW,EAUX,OAVW,EAWX,KAXW,EAYX,MAZW,EAaX,MAbW,EAcX,MAdW,EAeX,MAfW,EAgBX,IAhBW,EAiBX,MAjBW,CAAb,CAuBiC,CAG/B;;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKC,MAAL,GAAc,EAAd;AACA,aAAKJ,KAAL,CAAWK,QAAX,CAAoBlE,SAApB,CAA8B,UAACmE,MAAD,EAAY;AACxC,gBAAI,CAACC,SAAL,GAAiBD,MAAM,CAACE,GAAP,CAAW,WAAX,CAAjB;;AACA,gBAAI,CAACC,kBAAL,CAAwB,MAAI,CAACF,SAA7B;AACD,SAHD;AAID;;;;mCAEO,CACP;;;yCAEa;AAAA;;AACZ;AACA,cAAIG,IAAI,GAAG,KAAKT,WAAL,CAAiBU,IAAjB,CAAsB,UAACC,EAAD;AAAA,mBAAQ,MAAI,CAAClD,IAAL,CAAUmD,QAAV,CAAmBC,QAAnB,CAA4BF,EAA5B,CAAR;AAAA,WAAtB,CAAX;;AACA,cAAIF,IAAJ,EAAU;AACR,mBAAO,OAAP;AACD,WAFD,MAEO;AACL;AACAA,gBAAI,GAAG,KAAKR,UAAL,CAAgBS,IAAhB,CAAqB,UAACC,EAAD,EAAQ;AAClC,qBAAO,MAAI,CAAClD,IAAL,CAAUmD,QAAV,CAAmBC,QAAnB,CAA4BF,EAA5B,CAAP;AACD,aAFM,CAAP;;AAGA,gBAAIF,IAAJ,EAAU;AACR,qBAAO,MAAP;AACD;AACF,WAbW,CAcZ;;;AACA,iBAAO,SAAP;AACD;;;2CAEwBH,S,EAAmB;;;;;;;;;;;AAC1C,2BAAM,KAAKnD,WAAL,CACHqD,kBADG,CACgBF,SADhB,EAEHlC,IAFG,CAGF,2DAAI,UAACC,GAAD,EAAS;AACX,6BAAI,CAACZ,IAAL,GAAYY,GAAG,CAACZ,IAAhB;;AACA,0BAAI,CAAC,OAAI,CAACA,IAAL,CAAUS,OAAf,EAAwB;AACtB4C,8BAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAI,CAACvD,IAAL,CAAUmD,QAAjC;AACD;;AACD,6BAAI,CAACT,MAAL,GAAc,OAAI,CAACc,cAAL,EAAd;AAED,qBAPD,CAHE,EAYH3C,SAZG,EAAN;;;;;;;;;AAaD;;;iCAEQb,I,EAAc;AACrBqD,gBAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBvD,IAAvB;AACD;;;iCAEQyD,e,EAAyBC,E,EAAY;AAAA;;AAC5C,cAAID,eAAe,KAAK,IAAxB,EAA8B;AAC5B,iBAAK/D,WAAL,CAAiBiE,WAAjB,CAA6BD,EAA7B,EAAiCjF,SAAjC,CACE,UAACmC,GAAD,EAAS;AACP,qBAAI,CAAC6B,QAAL,GAAgB7B,GAAG,CAACe,MAApB,CADO,CAEP;AACD,aAJH,EAKE,UAACC,GAAD,EAAS;AACPd,qBAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,aAPH;AASD;AACF;;;;;;;uBA/FUS,kB,EAAkB,0I,EAAA,+H,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,w3B;AAAA;AAAA;ADX/B;;;;AAAuB;;;;;;;;;sECWVA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTvD,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSnB;;AAAuC;;AAAc;;;;;;AAUrD;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AAWA;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AAaA;;AACE;;AACF;;;;QCnEC4E,e;;;AAKX,+BACmBC,aADnB,EAEmBlE,QAFnB,EAGmBrB,MAHnB,EAGiC;AAAA;;AAFd,aAAAuF,aAAA,GAAAA,aAAA;AACA,aAAAlE,QAAA,GAAAA,QAAA;AACA,aAAArB,MAAA,GAAAA,MAAA;AAEjB,aAAKwF,MAAL,GAAc,EAAd;AACA,aAAKC,iBAAL,GAAyB,IAAzB;AACD;;;;mCAEO;AACN,eAAKC,UAAL,GAAkB,IAAI,0DAAJ,GAAkBC,KAAlB,CAAwB;AACxCC,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWpE,QAAhB,CADkC;AAExCqE,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWrE,QAAhB,CAFgC;AAGxCqB,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWrB,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,iBAAnB,CAAtB,CAAL,CAHiC;AAIxCqE,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWtE,QAAhB,CAJ+B;AAKxCuE,iBAAK,EAAE,CACL,EADK,EAEL,CACE,0DAAWvE,QADb,EAEE,0DAAWC,OAAX,CAAmB,mCAAnB,CAFF,CAFK,CALiC;AAYxCuE,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWxE,QAAhB;AAZ+B,WAAxB,CAAlB;AAcD;;;iCAEQ2D,e,EAAyB;AAChC;AACA,eAAKM,iBAAL,GAAyBN,eAAzB;AACD;;;uCAEoB;;;;;;;;;;0BAEb,KAAKO,UAAL,CAAgBO,KAAhB,IAAyB,KAAKR,iBAAL,KAA2B,I;;;;;;AACtD,2BAAM,KAAKF,aAAL,CAAmBW,MAAnB,CAA0B,KAAKV,MAA/B,EAAuCjD,SAAvC,EAAN;;;AACA,yBAAKlB,QAAL,CAAcO,IAAd,CAAmB,yBAAnB,EAA8C,IAA9C,EAAoD;AAClDG,8BAAQ,EAAE,IADwC;AAElDF,sCAAgB,EAAE,QAFgC;AAGlDC,wCAAkB,EAAE;AAH8B,qBAApD;AAKA,yBAAK9B,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;;;;;;;;;AAGFiC,2BAAO,CAACC,GAAR;;;;;;;;;AAEH;;;4BAEY;AACX,iBAAO,KAAKiD,UAAL,CAAgBS,QAAvB;AACD;;;;;;;uBAtDUb,e,EAAe,8I,EAAA,wI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,06B;AAAA;AAAA;ADjB5B;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAY;;AAAG;;AACf;;AACE;AAAA;AAAA;;AADF;;AAMA;;AACF;;AACA;;AACE;;AAAY;;AAAY;;AACxB;;AACE;AAAA;AAAA;;AADF;;AAMA;;AAGF;;AACA;;AACE;;AAAY;;AAAU;;AACtB;;AACE;AAAA;AAAA;;AADF;;AAMA;;AAGF;;AAEA;;AACE;;AAAY;;AAAK;;AACjB;;AACE;AAAA;AAAA;;AADF;;AAMA;;AAGF;;AACA;;AACE;;AAAY;;AAAK;;AACjB;;AACE;AAAA;AAAA;;AADF;;AAMA;;AAGF;;AAEA;;AACE;;AAAY;;AAAI;;AAChB;;AAEE;AAAA;AAAA;;AAKD;;AACD;;AAGF;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;AAAA,mBAAY,IAAAc,QAAA,QAAZ;AAA4B,WAA5B;;AACD;;AACD;;AACE;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAIA;;AAAU;;AAAK;;AACf;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA/Fc;;AAAA;;AAIA;;AAAA;;AAKS;;AAAA;;AAKT;;AAAA;;AAKS;;AAAA;;AAOT;;AAAA;;AAKS;;AAAA;;AAQT;;AAAA;;AAKS;;AAAA;;AAOT;;AAAA;;AAKS;;AAAA;;AAST;;AAAA;;AAMS;;AAAA;;AAeb;;AAAA;;;;;;;;;sEChFGf,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC2BQ;;AAGE;AAAA;;AAAA;;AAAA,mCAAmB,aAAnB;AAAgC,SAAhC;;AAEA;;AAAsB;;AAAM;;AAC5B;;AAAa;;AAAU;;AACzB;;;;;;;;AACA;;AAGE;AAAA;;AAAA;;AAAA,mCAAmB,mBAAnB;AAAsC,SAAtC;;AAEA;;AAAa;;AAAQ;;AACvB;;;;QD3BK4F,uB;;;AAKX,uCACSxG,WADT,EAEUC,kBAFV,EAGSH,cAHT,EAIUI,MAJV,EAIwB;AAAA;;AAHf,aAAAF,WAAA,GAAAA,WAAA;AACC,aAAAC,kBAAA,GAAAA,kBAAA;AACD,aAAAH,cAAA,GAAAA,cAAA;AACC,aAAAI,MAAA,GAAAA,MAAA;AARV,aAAAC,aAAA,GAAgB,KAAhB;AAUC;;;;mCAEU;AAAA;;AACT,eAAKH,WAAL,CAAiBI,KAAjB,CAAuBC,SAAvB,CAAiC,UAACC,IAAD,EAAU;AACzC,mBAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,WAFD;AAGA,eAAKH,aAAL,GAAqB,KAAKF,kBAAL,CAAwBM,SAAxB,CACnB,oBADmB,CAArB;AAGD;;;iCAEQC,Q,EAAiB;AACxB,eAAKN,MAAL,CAAYO,QAAZ,CAAqBD,QAArB;AACA,eAAKV,cAAL,CAAoB2G,OAApB,CAA4B1C,IAA5B,CAAiC,KAAjC;AACD;;;;;;;uBAzBUyC,uB,EAAuB,0I,EAAA,uI,EAAA,gJ,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,6U;AAAA;AAAA;ACdpC;;AACE;;AAGE;AAAA,mBAAgB,IAAA1G,cAAA,qBAAhB;AAAmD,WAAnD;;;;AAGA;;AACE;;AACE;;AACE;;AAAM;;AAAM;;AACd;;AACF;;AACA;;AACE;;AAAsB;AAAA,mBAAS,IAAA4G,QAAA,EAAU,GAAV,EAAT;AAAwB,WAAxB;;AACpB;;AAAuB;;AAAI;;AAC3B;;AAAa;;AAAU;;AACzB;;AACA;;AACE;;AAAsB;;AAAI;;AAC1B;;AAAY;;AAAK;;AACnB;;AACA;;AAAsB;AAAA,mBAAS,IAAAA,QAAA,EAAU,cAAV,EAAT;AAAmC,WAAnC;;AACpB;;AAAuB;;AAAW;;AAClC;;AAAa;;AAAS;;AACxB;;AACA;;AACA;;;;AAQA;;;;AAOF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;;;AA3CI;;AAAA;;AAwBM;;AAAA;;AAQA;;AAAA;;;;;;;;;;sEDvBGF,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT9F,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;gBAEjC","file":"pages-client-client-module-es5.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {UserDto} from '../../models/user.dto';\nimport {UserService} from '../../services/user.service';\nimport {BreakpointObserver} from '@angular/cdk/layout';\nimport {SettingService} from '../../services/setting.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-client-header',\n  templateUrl: './client-header.component.html',\n  styleUrls: ['./client-header.component.scss']\n})\nexport class ClientHeaderComponent implements OnInit {\n  isSmallScreen = false;\n  user: UserDto;\n\n  constructor(\n    public userService: UserService,\n    private breakpointObserver: BreakpointObserver,\n    public settingService: SettingService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.userService.user$.subscribe((user) => {\n      this.user = user;\n    });\n    this.isSmallScreen = this.breakpointObserver.isMatched(\n      '(max-width: 768px)'\n    );\n  }\n\n  openLink(commands: any[]) {\n    this.router.navigate(commands);\n    // this.settingService.drawer$.next(false);\n  }\n\n}\n","<div class=\"home-menu\" >\n  <div\n    *ngIf=\"isSmallScreen\"\n    style=\"margin-left: 16px; cursor: pointer\"\n    (click)=\"settingService.drawer$.next(true)\"\n  >\n    <mat-icon style=\"color: white;\">\n      menu\n    </mat-icon>\n  </div>\n  <div class=\"menu-title\" [style.fontSize]=\"isSmallScreen ? '20px' : '24px'\">\n    کوتاه کننده لینک\n  </div>\n  <div class=\"menu-links\" *ngIf=\"!isSmallScreen\">\n\n    <!-- <span>&nbsp;</span> -->\n    <button mat-button (click)=\"openLink(['/'])\">\n      وبلاگ\n    </button>\n\n    <button mat-button>\n      پشتیبانی\n    </button>\n  </div>\n  <div class=\"menu-profile\" *ngIf=\"!isSmallScreen\">\n    <button\n      *ngIf=\"!!user\"\n      mat-flat-button\n      (click)=\"openLink(['/member/dashboard'])\"\n    >\n      داشبورد\n    </button>\n\n    <button *ngIf=\"!user\" mat-flat-button (click)=\"openLink(['/user/login'])\">\n      وارد شوید\n    </button>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {ShareModule} from '../../share.module';\nimport {HomeComponent} from './home/home.component';\nimport {ClientTemplateComponent} from 'src/app/templates/client-template/client-template.component';\nimport {TicketComponent} from './ticket/ticket.component';\nimport {ShortLinkComponent} from './short-link/short-link.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\nimport {ClientHeaderComponent} from '../../components/client-header/client-header.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientTemplateComponent,\n    children: [\n      {path: '', component: HomeComponent},\n      {path: 'send/ticket', component: TicketComponent},\n      {path: ':shortLink', component: ShortLinkComponent},\n    ],\n  },\n  {path: 'user/login', component: LoginComponent},\n  {path: 'page/not-found', component: NotFoundComponent},\n];\n\n@NgModule({\n  declarations: [\n    ClientTemplateComponent,\n    LoginComponent,\n    HomeComponent,\n    TicketComponent,\n    ShortLinkComponent,\n    NotFoundComponent,\n    ClientHeaderComponent\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), ShareModule],\n})\nexport class ClientModule {\n}\n","<app-client-header></app-client-header>\n<div>\n  <div class=\"home-header row\" style=\"height: 70vh\">\n    <div class=\"col-12\">\n      <div class=\"header-text\" >\n        <span class=\"right2\" ></span>\n        <span class=\"right\" >  </span>\n        <span class=\"title\">\n          با کوتاه کردن لینک درامد ارزی کسب کن\n        </span>\n        <span class=\"left\">  </span>\n        <span class=\"left2\" >  </span>\n      </div>\n      <div class=\"form\">\n        <div  class=\" header-search-container col-md-7 col-11\">\n          <input\n            [(ngModel)]=\"link.mainLink\"\n            [formControl]=\"linkControl\"\n            (keydown.enter)=\"createLink()\"\n            type=\"text\"\n            placeholder=\"لینکت رو  با یک کلیک کوتاه کن\"\n          />\n          <button (click)=\"createLink()\">\n            <mat-icon color=\"primary\">send</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div *ngIf=\"newLink.shortLink\" class=\"newlink\">\n        <mat-card class=\"col-3\">\n          <mat-icon\n            [cdkCopyToClipboard]=\"url+ '/' +newLink.shortLink\"\n            (click)=\"openCopySnack()\"\n          >\n            file_copy\n          </mat-icon>\n          <span>\n            {{url + '/' + newLink.shortLink }}\n          </span>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n  <div class=\"header-body\">\n    فقط کافیه سه مرحله زیر رو انجام بدی\n  </div>\n  <div class=\"level-container\">\n    <div class=\"levels row col-10\">\n      <div class=\"col-md-3 col-10\">\n        <div style=\"text-align: center;\">\n          <img\n            src=\"../../../../assets/login.svg\"\n            style=\"width: 100px; height: 100px;\"\n          />\n        </div>\n        <h3>\n          1- ثبت نام و ورود به حساب کاربری\n        </h3>\n        <div class=\"des\">\n          ابتدا ثبت نام کنید تا بتوانید با کوتاه کردن لینک درامد کسب کنید\n        </div>\n      </div>\n      <div class=\"col-md-3 col-10\">\n        <div style=\"text-align: center;\">\n          <img\n            src=\"../../../../assets/share.svg\"\n            style=\"width: 100px; height: 100px;\"\n          />\n        </div>\n        <h3>\n          2- کوتاه کردن لینکها\n        </h3>\n        <div class=\"des\">\n          لینک های خود در گروه ها، سایت یا کانال ها به اشتراک بگذاید\n        </div>\n      </div>\n      <div class=\"col-md-3 col-10\">\n        <div style=\"text-align: center;\">\n          <img\n            src=\"../../../../assets/bitcoin.svg\"\n            style=\"width: 100px; height: 100px;\"\n          />\n        </div>\n        <h3>\n          3- نشر لینک و کسب دارمد\n        </h3>\n        <div class=\"des\">\n          به ازای هرکسی که که روی لینک شما کلید میکند درامد کسب کنید\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {BreakpointObserver} from '@angular/cdk/layout';\nimport {LinkService} from 'src/app/services/link.service';\nimport {LinkDto} from 'src/app/models/link.dto';\nimport {UserService} from 'src/app/services/user.service';\nimport {UserDto} from 'src/app/models/user.dto';\nimport {map} from 'rxjs/operators';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  isSmallScreen: boolean;\n  link: LinkDto;\n  newLink: LinkDto;\n  user: UserDto;\n  url: string = environment.url;\n  linkControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\n      /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/\n    ),\n  ]);\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private readonly linkService: LinkService,\n    private readonly userService: UserService,\n    private readonly snackbar: MatSnackBar\n  ) {\n    this.userService.user$.subscribe((user) => {\n      this.user = user;\n    });\n    this.isSmallScreen = false;\n    this.link = {};\n    this.newLink = {};\n  }\n\n  openCopySnack() {\n    this.snackbar.open('لینک کپی شد', null, {\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n      duration: 1000,\n      direction: 'rtl',\n    });\n  }\n\n  // ایجاد لینک کوتاه\n  async createLink() {\n    try {\n      // آیا لینک وارد شده است\n      if (this.linkControl.hasError('required')) {\n        this.snackbar.open('لینک الزامی است', null, {\n          verticalPosition: 'bottom',\n          horizontalPosition: 'center',\n          duration: 5000,\n          direction: 'rtl',\n        });\n      } else if (this.linkControl.hasError('pattern')) {\n        // آیا لینک مشکل الگو دارد؟\n        if (this.linkControl.hasError('pattern')) {\n          this.snackbar.open('لینک معتبر وارد کنید', null, {\n            verticalPosition: 'bottom',\n            horizontalPosition: 'center',\n            duration: 5000,\n            direction: 'rtl',\n          });\n        }\n      } else {\n        if (this.user !== null) {\n          this.link.user = this.user._id;\n          this.link.showAds = true;\n        }\n        await this.linkService\n          .createLink(this.link)\n          .pipe(\n            map((res) => {\n              this.newLink = res.link;\n              this.link = {};\n            })\n          )\n          .toPromise();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ngOnInit(): void {\n    this.isSmallScreen = this.breakpointObserver.isMatched(\n      '(max-width: 768px)'\n    );\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  state: 'phone' | 'key';\n  phone: string;\n  key: string;\n  loading: boolean;\n\n  phoneControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/0?[1-9][0-9]{9}/),\n  ]);\n\n  keyControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[0-9]{6}/),\n  ]);\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly snackbar: MatSnackBar,\n    private readonly router: Router\n  ) {\n    userService.user$.subscribe((res) => {\n      if (res !== null) {\n        this.router.navigate(['/']);\n      }\n    });\n    this.phone = '';\n    this.key = '';\n    this.state = 'phone';\n    this.loading = false;\n  }\n\n  ngOnInit(): void {}\n\n  // ارسال شماره همراه برای ارسال کد\n  signin() {\n    if (this.phoneControl.invalid) {\n      return false;\n    }\n    if (this.phone.startsWith('0')) {\n      this.phone = this.phone.substr(1);\n    }\n    this.userService.signin(this.phone).subscribe(\n      (res) => {\n        if (res.status) {\n          this.state = 'key';\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  // اعتبار سنجی کد\n  verify() {\n    if (this.keyControl.invalid) {\n      return false;\n    }\n    this.userService.verify(this.phone, this.key).subscribe(\n      (res) => {\n        localStorage.setItem('token', res.token);\n\n        this.snackbar.open(res.message, null, {\n          verticalPosition: 'bottom',\n          horizontalPosition: 'center',\n          duration: 3000,\n          direction: 'rtl',\n        });\n        this.profile();\n        this.router.navigate(['/member/dashboard']);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  // گرفتن پروفایل کاربر\n  profile() {\n    this.userService.profile().subscribe(\n      (res) => {\n        this.userService.user$.next(res.user);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n}\n","<div class=\"main\">\n  <!--  <div class=\"logo\" >-->\n  <!--    لوگوی سایت-->\n  <!--  </div>-->\n  <div class=\"login-container\">\n    <!--  برای شماره تلفن  -->\n    <mat-card\n      *ngIf=\"state === 'phone'\"\n      class=\"mat-elevation-z2 col-md-4 col-sm-8 col-12\"\n    >\n      <div class=\"title\">\n        <mat-card-title>\n          وارد شوید\n        </mat-card-title>\n      </div>\n\n      <div class=\"form-container\">\n        <mat-form-field class=\"col-sm-10 col-11\" appearance=\"outline\">\n          <mat-label>\n            شماره موبایل\n          </mat-label>\n          <input\n            [(ngModel)]=\"phone\"\n            [formControl]=\"phoneControl\"\n            matInput\n            type=\"text\"\n          />\n          <mat-icon matSuffix>\n            phone\n          </mat-icon>\n          <mat-error *ngIf=\"phoneControl.hasError('required')\">\n            شماره تلفن الزامی است\n          </mat-error>\n          <mat-error *ngIf=\"phoneControl.hasError('pattern')\">\n            شماره تلفن 10 یا 11 رقم است\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"button-container\">\n        <button (click)=\"signin()\" mat-raised-button color=\"primary\">\n          ارسال کد\n        </button>\n      </div>\n    </mat-card>\n\n    <!--  برای کد تائید  -->\n    <mat-card\n      *ngIf=\"state === 'key'\"\n      class=\"col-md-4 col-sm-8 col-12 mat-elevation-z2\"\n    >\n      <div class=\"title\">\n        <mat-card-title>\n          لطفا کد ارسال شده را وارد کنید\n        </mat-card-title>\n      </div>\n\n      <div class=\"form-container\">\n        <mat-form-field class=\"col-md-10 col-11\" appearance=\"outline\">\n          <mat-label>\n            کد تائید\n          </mat-label>\n          <input\n            [(ngModel)]=\"key\"\n            [formControl]=\"keyControl\"\n            matInput\n            type=\"text\"\n          />\n\n          <mat-error *ngIf=\"keyControl.hasError('required')\">\n            کد تائید الزامی است\n          </mat-error>\n\n          <mat-error *ngIf=\"keyControl.hasError('pattern')\">\n            کد باید 6 رقم باشد\n          </mat-error>\n          <mat-icon matSuffix>\n            lock\n          </mat-icon>\n        </mat-form-field>\n      </div>\n\n      <div class=\"button-container\">\n        <button (click)=\"verify()\" mat-raised-button color=\"primary\">\n          اعتبار سنجی کد\n        </button>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>404 not found</p>\n","<div class=\"shortlink\" *ngIf=\"link.showAds\">\n  <div class=\"main\">\n    <mat-card class=\"col-10\">\n      <div class=\"header-ads\">\n        <div>\n          <img src=\"https://via.placeholder.com/460x60\"/>\n        </div>\n        <div>\n          <img src=\"https://via.placeholder.com/460x60\"/>\n        </div>\n      </div>\n      <div class=\"main-ads row\">\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n\n        <div class=\"col-4\">\n          <img src=\"https://via.placeholder.com/300x250\"/>\n        </div>\n      </div>\n      <div *ngIf=\"!showLink\" class=\"recaptcha\">\n        <re-captcha (resolved)=\"resolved($event,link._id)\"></re-captcha>\n      </div>\n      <div\n        class=\"link\"\n        *ngIf=\"link.mainLink && showLink\"\n        [ngSwitch]=\"format\"\n      >\n        <div class=\"video\" *ngSwitchCase=\"'video'\">\n          <div class=\"video-container\">\n            <app-vjs [src]=\"link.mainLink\"></app-vjs>\n          </div>\n          <div class=\"download\">\n            <button (click)=\"goToLink(link.mainLink)\" mat-raised-button color=\"primary\">\n              دانلود فیلم\n            </button>\n          </div>\n        </div>\n        <div *ngSwitchCase=\"'file'\" style=\"text-align: center;margin: 20px 0px\">\n          <button (click)=\"goToLink(link.mainLink)\" mat-raised-button color=\"primary\">\n            دریافت فایل\n          </button>\n        </div>\n        <div *ngSwitchCase=\"'default'\" style=\"text-align: center\">\n          <button\n            mat-raised-button\n            style=\"margin: 20px 0px\"\n            color=\"primary\"\n            (click)=\"goToLink(link.mainLink)\"\n          >\n            برو به لینک\n          </button>\n        </div>\n      </div>\n      <div style=\"text-align: center;\">\n        <img src=\"https://via.placeholder.com/850x100\"/>\n      </div>\n    </mat-card>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {LinkService} from 'src/app/services/link.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LinkDto} from 'src/app/models/link.dto';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-short-link',\n  templateUrl: './short-link.component.html',\n  styleUrls: ['./short-link.component.scss'],\n})\nexport class ShortLinkComponent implements OnInit {\n  link: LinkDto = {};\n  shortLink: string;\n  showLink: boolean;\n\n  format: string;\n  videoFormat = ['.mp4', '.mkv', '.webm', '.ogg', '.mov', '.mkv', '.avi'];\n  fileFormat = [\n    '.asc',\n    '.exe',\n    '.doc',\n    '.docx',\n    '.rtf',\n    ' .msg',\n    '.pdf',\n    '.txt',\n    '.arc',\n    '.arj ',\n    '.gz',\n    '.hqx',\n    '.rar',\n    '.sit',\n    '.tar',\n    '.z',\n    '.zip',\n  ];\n\n  constructor(\n    private readonly linkService: LinkService,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router\n  ) {\n\n    // برای تست\n    this.showLink = false;\n    this.format = '';\n    this.route.paramMap.subscribe((params) => {\n      this.shortLink = params.get('shortLink');\n      this.getLinkByShortLink(this.shortLink);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  findLinkFormat(): string {\n    // آیا نوع لینک ویدیو است؟\n    let type = this.videoFormat.some((el) => this.link.mainLink.includes(el));\n    if (type) {\n      return 'video';\n    } else {\n      // آیا نوع لینک فایل است؟\n      type = this.fileFormat.some((el) => {\n        return this.link.mainLink.includes(el);\n      });\n      if (type) {\n        return 'file';\n      }\n    }\n    // نوع خاصی نیست\n    return 'default';\n  }\n\n  async getLinkByShortLink(shortLink: string) {\n    await this.linkService\n      .getLinkByShortLink(shortLink)\n      .pipe(\n        map((res) => {\n          this.link = res.link;\n          if (!this.link.showAds) {\n            window.location.href = this.link.mainLink;\n          }\n          this.format = this.findLinkFormat();\n\n        })\n      )\n      .toPromise();\n  }\n\n  goToLink(link: string) {\n    window.location.href = link;\n  }\n\n  resolved(captchaResponse: string, id: string) {\n    if (captchaResponse !== null) {\n      this.linkService.createVisit(id).subscribe(\n        (res) => {\n          this.showLink = res.status;\n          // this.link.mainLink.some();\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n  }\n}\n\n","<app-client-header></app-client-header>\n<div class=\"main\">\n  <mat-card class=\"col-12\">\n    <mat-card-title>\n      <span>\n        ارسال تیکت پشتیبانی\n      </span>\n    </mat-card-title>\n\n    <mat-card-content style=\"margin-top: 20px;\">\n      <div class=\"row input-container\">\n        <form [formGroup]=\"ticketForm\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-4 col-12\">\n            <mat-label> نام</mat-label>\n            <input\n              [(ngModel)]=\"ticket.name\"\n              formControlName=\"name\"\n              type=\"text\"\n              matInput\n            />\n            <mat-error *ngIf=\"inputs.name.errors\"> نام الزامی است</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" class=\"col-md-4 col-12\">\n            <mat-label> نام خانوادگی</mat-label>\n            <input\n              [(ngModel)]=\"ticket.family\"\n              formControlName=\"family\"\n              type=\"text\"\n              matInput\n            />\n            <mat-error *ngIf=\"inputs.family.errors\">\n              نام خانوادگی الزامی است\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" class=\"col-md-4 col-12\">\n            <mat-label> شماره تلفن</mat-label>\n            <input\n              [(ngModel)]=\"ticket.phone\"\n              formControlName=\"phone\"\n              type=\"text\"\n              matInput\n            />\n            <mat-error *ngIf=\"inputs.phone.errors\">\n              شماره تلفن الزامی است\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"col-md-4 col-12\">\n            <mat-label> موضوع</mat-label>\n            <input\n              [(ngModel)]=\"ticket.subject\"\n              formControlName=\"subject\"\n              type=\"text\"\n              matInput\n            />\n            <mat-error *ngIf=\"inputs.subject.errors\">\n              موضوع الزامی است\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" class=\"col-md-4 col-12\">\n            <mat-label> ایمیل</mat-label>\n            <input\n              [(ngModel)]=\"ticket.email\"\n              formControlName=\"email\"\n              type=\"text\"\n              matInput\n            />\n            <mat-error *ngIf=\"inputs.email.errors\">\n              ایمیل الزامی است\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"col-12\">\n            <mat-label> پیام</mat-label>\n            <textarea\n              style=\"line-height: 2;\"\n              [(ngModel)]=\"ticket.content\"\n              formControlName=\"content\"\n              rows=\"4\"\n              type=\"text\"\n              matInput\n            ></textarea>\n            <mat-error *ngIf=\"inputs.content.errors\">\n              متن پیام الزامی است\n            </mat-error>\n          </mat-form-field>\n\n        </form>\n      </div>\n    </mat-card-content>\n    <mat-card-actions dir=\"ltr\">\n      <div class=\"save\">\n        <re-captcha\n          (resolved)=\"resolved($event)\"\n        ></re-captcha>\n        <button\n          (click)=\"createTicket()\"\n          [disabled]=\"recaptchaResponse === null && ticketForm.invalid\"\n          mat-raised-button color=\"primary\"\n        >\n          <mat-icon>check</mat-icon>\n          ارسال تیکت\n        </button>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {TicketDto} from 'src/app/models/ticket.dto';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport {TicketService} from 'src/app/services/ticket.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss'],\n})\nexport class TicketComponent implements OnInit {\n  ticket: TicketDto;\n  ticketForm: FormGroup;\n  recaptchaResponse: string | null;\n\n  constructor(\n    private readonly ticketService: TicketService,\n    private readonly snackbar: MatSnackBar,\n    private readonly router: Router\n  ) {\n    this.ticket = {};\n    this.recaptchaResponse = null;\n  }\n\n  ngOnInit(): void {\n    this.ticketForm = new FormBuilder().group({\n      name: ['', Validators.required],\n      family: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(/0?[1-9][0-9]{9}/)]],\n      subject: ['', Validators.required],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g),\n        ],\n      ],\n      content: ['', Validators.required],\n    });\n  }\n\n  resolved(captchaResponse: string) {\n    // console.log(this.robot);\n    this.recaptchaResponse = captchaResponse;\n  }\n\n  async createTicket() {\n    try {\n      if (this.ticketForm.valid && this.recaptchaResponse !== null) {\n        await this.ticketService.create(this.ticket).toPromise();\n        this.snackbar.open('تیکت با موفقیت ارسال شد', null, {\n          duration: 5000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'center',\n        });\n        this.router.navigate(['/']);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  get inputs() {\n    return this.ticketForm.controls;\n  }\n}\n","import {Component, OnInit, ElementRef, Input} from '@angular/core';\n\nimport {SettingService} from 'src/app/services/setting.service';\n\nimport {UserService} from 'src/app/services/user.service';\nimport {Router} from '@angular/router';\nimport {BreakpointObserver} from '@angular/cdk/layout';\nimport {UserDto} from 'src/app/models/user.dto';\n\n@Component({\n  selector: 'app-client-template',\n  templateUrl: './client-template.component.html',\n  styleUrls: ['./client-template.component.scss'],\n})\nexport class ClientTemplateComponent implements OnInit {\n  isSmallScreen = false;\n  @Input() transparent: boolean;\n  user: UserDto;\n\n  constructor(\n    public userService: UserService,\n    private breakpointObserver: BreakpointObserver,\n    public settingService: SettingService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.userService.user$.subscribe((user) => {\n      this.user = user;\n    });\n    this.isSmallScreen = this.breakpointObserver.isMatched(\n      '(max-width: 768px)'\n    );\n  }\n\n  openLink(commands: any[]) {\n    this.router.navigate(commands);\n    this.settingService.drawer$.next(false);\n  }\n}\n","<mat-drawer-container class=\"example-container\">\n  <mat-drawer\n    mode=\"push\"\n    position=\"start\"\n    (openedChange)=\"settingService.drawer$.next($event)\"\n    [opened]=\"settingService.drawer$ | async\"\n  >\n    <div dir=\"rtl\" style=\"min-width: 80vw;max-width: 80vw;\">\n      <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n          <span>راهبری</span>\n        </mat-toolbar-row>\n      </mat-toolbar>\n      <mat-action-list>\n        <button mat-list-item (click)=\"openLink(['/'])\">\n          <mat-icon matListIcon> home</mat-icon>\n          <h3 matLine> صفحه اصلی </h3>\n        </button>\n        <button mat-list-item>\n          <mat-icon matListIcon>book</mat-icon>\n          <h3 matLine>وبلاگ</h3>\n        </button>\n        <button mat-list-item (click)=\"openLink(['/send/ticket'])\">\n          <mat-icon matListIcon> local_offer</mat-icon>\n          <h3 matLine> پشتیبانی </h3>\n        </button>\n        <mat-divider></mat-divider>\n        <button\n          mat-list-item\n          *ngIf=\"!(userService.user$ | async)\"\n          (click)=\"openLink(['/user/login'])\"\n        >\n          <mat-icon matListIcon>person</mat-icon>\n          <h3 matLine> وارد شوید </h3>\n        </button>\n        <button\n          mat-list-item\n          *ngIf=\"!!(userService.user$ | async)\"\n          (click)=\"openLink(['/member/dashboard'])\"\n        >\n          <h3 matLine> داشبورد </h3>\n        </button>\n      </mat-action-list>\n    </div>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n"]}